// Code generated by 'fieldr'; DO NOT EDIT.

package sql

type col string

const (
	colID      col = "id"
	colName    col = "name"
	colSurname col = "surname"
	colValues  col = "values"
	colTs      col = "ts"
	colVersion col = "version"
)

func cols() []col {
	return []col{
		colID,
		colName,
		colSurname,
		colValues,
		colTs,
		colVersion}
}

func (s *Entity) val(f col) interface{} {
	if s == nil {
		return nil
	}
	switch f {
	case colID:
		if be := s.BaseEntity; be != nil {
			return be.ID
		}
	case colName:
		return s.Name
	case colSurname:
		return s.Surname
	case colValues:
		return s.Values
	case colTs:
		return s.Ts
	case colVersion:
		return s.Versioned.Version
	}
	return nil
}

func (s *Entity) ref(f col) interface{} {
	if s == nil {
		return nil
	}
	switch f {
	case colID:
		if be := s.BaseEntity; be != nil {
			return &be.ID
		}
	case colName:
		return &s.Name
	case colSurname:
		return &s.Surname
	case colValues:
		return &s.Values
	case colTs:
		return &s.Ts
	case colVersion:
		return &s.Versioned.Version
	}
	return nil
}
