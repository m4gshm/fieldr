// Code generated by 'fieldr -type Struct -wrap -export -output struct_util.go'; DO NOT EDIT.

package examples

type (
	StructField     string
	StructFields    []StructField
	StructTag       string
	StructTags      []StructTag
	StructTagValue  string
	StructTagValues []StructTagValue
)

const (
	StructField_ID     = StructField("ID")
	StructField_Name   = StructField("Name")
	StructField_NoJson = StructField("NoJson")
	StructField_ts     = StructField("ts")

	StructTag_db   = StructTag("db")
	StructTag_json = StructTag("json")

	StructTagValue_db_ID     = StructTagValue("ID")
	StructTagValue_db_Name   = StructTagValue("NAME")
	StructTagValue_db_NoJson = StructTagValue("NO_JSON")
	StructTagValue_db_ts     = StructTagValue("TS")

	StructTagValue_json_ID   = StructTagValue("id")
	StructTagValue_json_Name = StructTagValue("name")
)

var (
	struct_Fields = StructFields{StructField_ID, StructField_Name, StructField_NoJson, StructField_ts}

	struct_Tags = StructTags{StructTag_db, StructTag_json}

	struct_FieldTags = map[StructField]StructTags{
		StructField_ID:     StructTags{StructTag_db, StructTag_json},
		StructField_Name:   StructTags{StructTag_db, StructTag_json},
		StructField_NoJson: StructTags{StructTag_db},
		StructField_ts:     StructTags{StructTag_db},
	}

	struct_TagValues = map[StructTag]StructTagValues{
		StructTag_db:   StructTagValues{StructTagValue_db_ID, StructTagValue_db_Name, StructTagValue_db_NoJson, StructTagValue_db_ts},
		StructTag_json: StructTagValues{StructTagValue_json_ID, StructTagValue_json_Name},
	}

	struct_TagFields = map[StructTag]StructFields{
		StructTag_db:   StructFields{StructField_ID, StructField_Name, StructField_NoJson, StructField_ts},
		StructTag_json: StructFields{StructField_ID, StructField_Name},
	}

	struct_FieldTagValue = map[StructField]map[StructTag]StructTagValue{
		StructField_ID:     map[StructTag]StructTagValue{StructTag_db: StructTagValue_db_ID, StructTag_json: StructTagValue_json_ID},
		StructField_Name:   map[StructTag]StructTagValue{StructTag_db: StructTagValue_db_Name, StructTag_json: StructTagValue_json_Name},
		StructField_NoJson: map[StructTag]StructTagValue{StructTag_db: StructTagValue_db_NoJson},
		StructField_ts:     map[StructTag]StructTagValue{StructTag_db: StructTagValue_db_ts},
	}
)

func (v StructFields) Strings() []string {
	strings := make([]string, len(v))
	for i, val := range v {
		strings[i] = string(val)
	}
	return strings
}

func (v StructTags) Strings() []string {
	strings := make([]string, len(v))
	for i, val := range v {
		strings[i] = string(val)
	}
	return strings
}

func (v StructTagValues) Strings() []string {
	strings := make([]string, len(v))
	for i, val := range v {
		strings[i] = string(val)
	}
	return strings
}

func (v *Struct) GetFieldValue(field StructField) interface{} {
	switch field {
	case StructField_ID:
		return v.ID
	case StructField_Name:
		return v.Name
	case StructField_NoJson:
		return v.NoJson
	case StructField_ts:
		return v.ts
	}
	return nil
}

func (v *Struct) GetFieldValueByTagValue(tag StructTagValue) interface{} {
	switch tag {
	case StructTagValue_db_ID, StructTagValue_json_ID:
		return v.ID
	case StructTagValue_db_Name, StructTagValue_json_Name:
		return v.Name
	case StructTagValue_db_NoJson:
		return v.NoJson
	case StructTagValue_db_ts:
		return v.ts
	}
	return nil
}

func (v *Struct) GetFieldValuesByTag(tag StructTag) []interface{} {
	switch tag {
	case StructTag_db:
		return []interface{}{v.ID, v.Name, v.NoJson, v.ts}
	case StructTag_json:
		return []interface{}{v.ID, v.Name}
	}
	return nil
}

func (v *Struct) AsMap() map[StructField]interface{} {
	return map[StructField]interface{}{
		StructField_ID:     v.ID,
		StructField_Name:   v.Name,
		StructField_NoJson: v.NoJson,
		StructField_ts:     v.ts,
	}
}

func (v *Struct) AsTagMap(tag StructTag) map[StructTagValue]interface{} {
	switch tag {
	case StructTag_db:
		return map[StructTagValue]interface{}{
			StructTagValue_db_ID:     v.ID,
			StructTagValue_db_Name:   v.Name,
			StructTagValue_db_NoJson: v.NoJson,
			StructTagValue_db_ts:     v.ts,
		}
	case StructTag_json:
		return map[StructTagValue]interface{}{
			StructTagValue_json_ID:   v.ID,
			StructTagValue_json_Name: v.Name,
		}
	}
	return nil
}
