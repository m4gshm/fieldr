// Code generated by 'fieldr'; DO NOT EDIT.

package builder

import (
	"bytes"
	"example/sql_base"
	"time"
)

type EntityBuilder[ID any] struct {
	ID        ID
	NoDB      *NoDBFieldsEntity
	Name      StringBasedType[string]
	Surname   string
	Values    []int32
	Ts        []*time.Time
	Versioned sql_base.VersionedEntity
	Chan      chan map[time.Time]string
	SomeMap   map[StringBasedType[string]]bytes.Buffer
}

func (b EntityBuilder[ID]) Build() *Entity[ID] {
	return &Entity[ID]{
		BaseEntity: &BaseEntity[ID]{
			ID: b.ID,
		},
		NoDB:      b.NoDB,
		Name:      b.Name,
		Surname:   b.Surname,
		Values:    b.Values,
		Ts:        b.Ts,
		Versioned: b.Versioned,
		Chan:      b.Chan,
		SomeMap:   b.SomeMap,
	}
}
func (b EntityBuilder[ID]) SetID(a ID) EntityBuilder[ID] {
	b.ID = a
	return b
}

func (b EntityBuilder[ID]) SetNoDB(a *NoDBFieldsEntity) EntityBuilder[ID] {
	b.NoDB = a
	return b
}

func (b EntityBuilder[ID]) SetName(a StringBasedType[string]) EntityBuilder[ID] {
	b.Name = a
	return b
}

func (b EntityBuilder[ID]) SetSurname(a string) EntityBuilder[ID] {
	b.Surname = a
	return b
}

func (b EntityBuilder[ID]) SetValues(a []int32) EntityBuilder[ID] {
	b.Values = a
	return b
}

func (b EntityBuilder[ID]) SetTs(a []*time.Time) EntityBuilder[ID] {
	b.Ts = a
	return b
}

func (b EntityBuilder[ID]) SetVersioned(a sql_base.VersionedEntity) EntityBuilder[ID] {
	b.Versioned = a
	return b
}

func (b EntityBuilder[ID]) SetChan(a chan map[time.Time]string) EntityBuilder[ID] {
	b.Chan = a
	return b
}

func (b EntityBuilder[ID]) SetSomeMap(a map[StringBasedType[string]]bytes.Buffer) EntityBuilder[ID] {
	b.SomeMap = a
	return b
}
