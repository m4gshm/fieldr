// Code generated by 'fieldr -type StructNoEmptyTag -out struct_no_empty_tag_as_map.go -wrap -export -AsMap -AsTagMap -noEmptyTag'; DO NOT EDIT.

package as_map

type (
	StructNoEmptyTagField     string
	StructNoEmptyTagTag       string
	StructNoEmptyTagTagValue  string
	StructNoEmptyTagTagValues []StructNoEmptyTagTagValue
)

const (
	StructNoEmptyTagField_ID      = StructNoEmptyTagField("ID")
	StructNoEmptyTagField_Name    = StructNoEmptyTagField("Name")
	StructNoEmptyTagField_Surname = StructNoEmptyTagField("Surname")
	StructNoEmptyTagField_NoTag   = StructNoEmptyTagField("NoTag")

	StructNoEmptyTagTag_toMap = StructNoEmptyTagTag("toMap")

	StructNoEmptyTagTagValue_toMap_ID      = StructNoEmptyTagTagValue("id")
	StructNoEmptyTagTagValue_toMap_Name    = StructNoEmptyTagTagValue("name")
	StructNoEmptyTagTagValue_toMap_Surname = StructNoEmptyTagTagValue("surname")
)

var (
	structNoEmptyTag_TagValues_toMap = StructNoEmptyTagTagValues{
		StructNoEmptyTagTagValue_toMap_ID,
		StructNoEmptyTagTagValue_toMap_Name,
		StructNoEmptyTagTagValue_toMap_Surname,
	}
)

func (v *StructNoEmptyTag) AsMap() map[StructNoEmptyTagField]interface{} {
	return map[StructNoEmptyTagField]interface{}{
		StructNoEmptyTagField_ID:      v.ID,
		StructNoEmptyTagField_Name:    v.Name,
		StructNoEmptyTagField_Surname: v.Surname,
		StructNoEmptyTagField_NoTag:   v.NoTag,
	}
}

func (v *StructNoEmptyTag) AsTagMap(tag StructNoEmptyTagTag) map[StructNoEmptyTagTagValue]interface{} {
	switch tag {
	case StructNoEmptyTagTag_toMap:
		return map[StructNoEmptyTagTagValue]interface{}{
			StructNoEmptyTagTagValue_toMap_ID:      v.ID,
			StructNoEmptyTagTagValue_toMap_Name:    v.Name,
			StructNoEmptyTagTagValue_toMap_Surname: v.Surname,
		}
	}
	return nil
}
